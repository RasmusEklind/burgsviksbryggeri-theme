//
// GRID
//
// Variables
$prefix: c !default;
$contentWidth: 100% !default;
$columns: 12 !default;
$gutter: 1 !default;
$min-width: 320px !default;
$max-width: 1800px !default;
@mixin grid-cols($col: $columns, $name: g) {
    $columnprefix: $name;
    @for $i from 1 through $columns {
        @if $i==12 {
            $combo: $i;
            $comboStart: 1;
            @for $p from $comboStart through $combo {
                .#{$columnprefix}-#{$p} {
                    width: ($p / $combo) * 100%;
                }
            }
        }
        @if $i==12 {
            $combo: $i;
            $comboStart: 1;
            @for $p from $comboStart through $combo {
                .gc .#{$columnprefix}-push-#{$p} {
                    margin-left: ($p / $combo) * 100%;
                }
            }
            @for $p from $comboStart through $combo {
                .gc .#{$columnprefix}-pull-#{$p} {
                    margin-right: ($p / $combo) * 100%;
                }
            }
        }
    }
    // @for END
}
// Mixin - Grid
@mixin grid($prefix, $contentWidth, $columns, $gutter, $min-width) {
    @include VP320 {
        .#{$prefix}-grid {
            &.-demo {
                [class^="g-"],
                div > [class^="g-"] {
                    margin-bottom: $gutter * 1rem;
                }

                .-mt {
                    margin-top: $gutter * 1rem;
                }

                .gc {
                    overflow: hidden;

                    &.-maximize {
                        max-width: none;
                    }
                }
            }
            // - - - GC - G=COLUMN, M=Module
            [class^="g-"] {
                float: left;
                @include box-sizing();
            }
            // - - - HOME Specila fix like maximize.
            &.home {
                [class^="g-"] {
                    padding: 0;
                }
            }
            // - - - GC - content wrapper
            .gc {
                @include clearfix;
                padding: 0 $gutter * 0.5rem;
                min-width: $min-width;
                max-width: $max-width;
                margin-left: auto;
                margin-right: auto;

                > [class^="g-"] {
                    padding: 0 $gutter * 0.5rem;
                }
                // - - - GC - MAXIMIZE
                &.-maximize {
                    width: 100%;
                    padding: 0;
                    max-width: none;

                    > [class^="g-"],
                     > div > [class^="g-"] {
                        padding: 0;
                    }

                    .-full-width {
                        > [class^="g-"] {
                            padding: 0 $gutter * 6px;
                        }
                    }
                }
                // - - - GC - CENTER
                &.-column-center {
                    > [class^="g-"] {
                        float: none;
                        margin-right: auto;
                        margin-left: auto;

                        &.g-1 {
                            float: left;
                        }
                    }
                }
                // - - - GC - Styleguid layout normalize (outer "margin" -> padding)
                @include SG {
                    &.f-gc-normalize {
                        width: 100%;
                        padding: 0;
                    }
                }
                // - - - GC - FULL WIDTH
                &.-full-width {
                    width: 100%;
                    padding: 0 $gutter * 0.5rem;

                    &.-no-gutter {
                        padding: 0 $gutter * 1rem;
                    }
                }
                // - - - GC - NO GUTTER
                &.-no-gutter {
                    padding: 0 $gutter * 0.5rem;
                    margin-left: auto;
                    margin-right: auto;

                    [class^="g-"] {
                        padding: 0;
                    }

                    [class^="m-"] {
                        margin-left: 0;
                        margin-right: 0;
                    }
                }
            }
            // .gc END
            // - - - COLUMNS
            // Columns > 1/2
            $oneStart: 1;
            $oneEnd: 2;
            @for $p from $oneStart through $oneEnd {
                .g-#{$p} {
                    width: 50%;
                }
            }
            $twoStart: 3;
            $twoEnd: 6;
            @for $p from $twoStart through $twoEnd {
                .g-#{$p} {
                    width: 100%;
                }
            }
            $threeStart: 7;
            $threeEnd: 12;
            @for $p from $threeStart through $threeEnd {
                .g-#{$p} {
                    width: 100%;
                }
            }

            .row {
                @include clearfix;
            }
        }
        // -grid END
    }
    // VP320 END
    @include TABLET {
        .#{$prefix}-grid {
            // .gc .g-4 {
            //     width: 50%;
            // }
            // .gc .-g-tablet-12 {
            //     width: 100%;
            // }
        }
    }
    @include VP600 {
        .#{$prefix}-grid {
            // - - - GC
            // - - - COLUMNS - MODIFIER
            .-column-shift-vp768 [class^="g-"] {
                float: right;
            }
            // - - - COLUMNS & PUSH / PULL
            @for $i from 1 through $columns {
                @if $i == 12 {
                    $combo: $i;
                    $comboStart: 1;
                    @for $p from $comboStart through $combo {
                        .g-#{$p} {
                            width: ($p / $combo) * 100%;
                        }
                    }
                }
                @if $i == 12 {
                    $combo: $i;
                    $comboStart: 1;
                    @for $p from $comboStart through $combo {
                        .g-push-#{$p} {
                            margin-left: ($p / $combo) * 100%;
                        }
                    }
                    @for $p from $comboStart through $combo {
                        .g-pull-#{$p} {
                            margin-right: ($p / $combo) * 100%;
                        }
                    }
                }
            }
        }
    }
    // VP768 END
    @include VP768 {
        .#{$prefix}-grid {
            // - - - GC
        }
    }
    @include VP1280 {
        .#{$prefix}-grid {
            .gc {
                margin: 0 auto;
                // width: 86%;
                padding: 0;
            }
        }
    }
    @include MOBILE {
        .#{$prefix}-grid {
            @include grid-cols(12, g-m);
        }
    }
    @include TABLET {
        .#{$prefix}-grid {
            @include grid-cols(12, g-t);
        }
    }
    @include ONLY1024 {
        .#{$prefix}-grid {
            @include grid-cols(12, g-1024);
        }
    }
}
// MIXIN grid END
@include grid($prefix, $contentWidth, $columns, $gutter, $min-width);
// @include grid-breakpoint($media-480, $name, $prefix, $media, fluid, $width , 10, 0);